name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            python-version: "3.12"
            artifact-name: linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            python-version: "3.12"
            artifact-name: linux-aarch64
            cross: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            python-version: "3.12"
            artifact-name: windows-amd64

    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # 安装 Rust 工具链
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # 安装 maturin
      - name: Install maturin
        run: pip install maturin

      # 安装 cross（仅用于 aarch64 交叉编译）
      - name: Install cross
        if: matrix.cross
        run: |
          cargo install cross
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      # 构建轮子
      - name: Build with maturin
        run: |
          if [ "${{ matrix.cross }}" == "true" ]; then
            cross run --target ${{ matrix.target }} maturin build --release --out dist --target ${{ matrix.target }}
          else
            maturin build --release --out dist --target ${{ matrix.target }}
          fi

      # 安装构建的轮子
      #- name: Install the package
      #  run: pip install dist/computing_lib-*.whl

      # 可选：将构建产物上传为 artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-wheel-${{ matrix.python-version }}
          path: dist/*.whl
